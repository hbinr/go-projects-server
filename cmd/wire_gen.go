// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"go-projects-server/internal/app"
	"go-projects-server/internal/app/user/controller"
	"go-projects-server/internal/app/user/dao"
	"go-projects-server/internal/app/user/service"
	"go-projects-server/pkg/conf"
	"go-projects-server/pkg/database"
	"go-projects-server/pkg/log"

	"github.com/google/wire"
)

// Injectors from wire.go:

func initWebApp() (*app.WebApp, error) {
	config, err := conf.Init()
	if err != nil {
		return nil, err
	}
	if err := log.Init(config); err != nil {
		return nil, err
	}
	engine, err := app.InitEngine(config)
	if err != nil {
		return nil, err
	}
	db := database.Init(config)
	userDao := &dao.UserDao{
		DB: db,
	}
	userService := &service.UserService{
		Dao: userDao,
	}
	userController, err := controller.NewUseController(engine, userService)
	if err != nil {
		return nil, err
	}
	webApp := &app.WebApp{
		Engine:   engine,
		Config:   config,
		UserCtrl: userController,
	}
	return webApp, nil
}

// wire.go:

var controllerSet = wire.NewSet(controller.NewUseController)
